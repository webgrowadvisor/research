include_once('shiprocket.php');

// shiprocket api Documentation //
https://apidocs.shiprocket.in/#8a56b4d6-b418-43cf-be25-ead62532aa18


if (isset($_SESSION['cart']) && !empty($_SESSION['cart'])) {
    $orderItems = [];
    $subTotal = 0;
    $totalQuantity = 0;

    foreach ($_SESSION['cart'] as $key => $value) {
        $itemName = htmlspecialchars($value['name'], ENT_QUOTES, 'UTF-8');
        $itemSku = htmlspecialchars($value['id'], ENT_QUOTES, 'UTF-8'); // Assuming 'id' is SKU
        $itemQuantity = (int) htmlspecialchars($value['quantity'], ENT_QUOTES, 'UTF-8');
        $itemPrice = (float) htmlspecialchars($value['price'], ENT_QUOTES, 'UTF-8');
        $itemDiscount = isset($value['discount']) ? (float) htmlspecialchars($value['discount'], ENT_QUOTES, 'UTF-8') : 0;
        $itemTax = isset($value['tax']) ? (float) htmlspecialchars($value['tax'], ENT_QUOTES, 'UTF-8') : 0;

        // Add this item to the orderItems array
        $orderItems[] = [
            "name" => $itemName,
            "sku" => $itemSku,
            "units" => $itemQuantity,
            "selling_price" => $itemPrice,
            "discount" => $itemDiscount,
            "tax" => $itemTax
        ];

        // Calculate sub-total and total quantity
        $subTotal += ($itemPrice * $itemQuantity);
        $totalQuantity += $itemQuantity;
    }
}


$orderData = [
            "order_id" => uniqid("ORD"),
            "pickup_location" => "Delhi", // Update as needed
            "billing_customer_name" => $name,
            "billing_last_name" => "",
            "billing_address" => $address,
            "billing_address_2" => "",
            "billing_city" => $city,
            "billing_pincode" => $pin,
            "billing_state" => $state,
            "billing_email" => $email,
            "billing_phone" => $phone,
            "order_items" => $orderItems,
            "sub_total" => $subTotal,
            "length" => 10, // Replace with actual logic if available
            "breadth" => 15, // Replace with actual logic if available
            "height" => 5, // Replace with actual logic if available
            "weight" => 0.5, // Replace with actual logic if available
            "quantities" => $totalQuantity,
            "book_by" => $book_by // Replace with actual user info
  ];

$ners = createShiprocketOrder($orderData); // pass all data in this function


<?php
function createShiprocketOrder($orderData) {
    // Shiprocket API credentials
    $loginUrl = "https://apiv2.shiprocket.in/v1/external/auth/login";
    $orderUrl = "https://apiv2.shiprocket.in/v1/external/orders/create/adhoc";
    $email = "kalusing4996@gmail.com"; // Replace with your Shiprocket email
    $password = "kalui09";       // Replace with your Shiprocket password

    try {
        // Step 1: Generate Token
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $loginUrl);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode(["email" => $email, "password" => $password]));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);

        $response = curl_exec($ch);
        curl_close($ch);

        $responseData = json_decode($response, true);
        if (!isset($responseData['token'])) {
            throw new Exception("Failed to generate Shiprocket token: " . $response);
        }

        $token = $responseData['token'];

        // Step 2: Prepare Order Data
        $shiprocketOrderData = [
            "order_id" => $orderData['order_id'],
            "order_date" => date("Y-m-d H:i"),
            "pickup_location" => $orderData['pickup_location'],
            "billing_customer_name" => $orderData['billing_customer_name'],
            "billing_last_name" => $orderData['billing_last_name'],
            "billing_address" => $orderData['billing_address'],
            "billing_address_2" => $orderData['billing_address_2'],
            "billing_city" => $orderData['billing_city'],
            "billing_pincode" => $orderData['billing_pincode'],
            "billing_state" => $orderData['billing_state'],
            "billing_country" => "India",
            "billing_email" => $orderData['billing_email'],
            "billing_phone" => $orderData['billing_phone'],
            "shipping_is_billing" => true,
            "order_items" => $orderData['order_items'],
            "payment_method" => "Prepaid",
            "sub_total" => $orderData['sub_total'],
            "length" => $orderData['length'],
            "breadth" => $orderData['breadth'],
            "height" => $orderData['height'],
            "weight" => $orderData['weight']
        ];

        // Step 3: Create Shiprocket Order
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $orderUrl);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($shiprocketOrderData));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            "Content-Type: application/json",
            "Authorization: Bearer " . $token
        ]);

        $response = curl_exec($ch);
        curl_close($ch);

        $responseData = json_decode($response, true);
        if (!isset($responseData['order_id'])) {
            throw new Exception("Failed to create Shiprocket order: " . $response);
        }

        
        return [
            "order_id" => $responseData['order_id'],
            "message" => "Order created successfully!"
        ];
    } catch (Exception $e) {
        return ["error" => $e->getMessage()];
    }
    
}

?>
